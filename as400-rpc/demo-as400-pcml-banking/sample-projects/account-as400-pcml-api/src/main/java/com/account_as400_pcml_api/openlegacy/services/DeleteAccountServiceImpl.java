package com.account_as400_pcml_api.openlegacy.services;

import org.apache.commons.lang3.StringUtils;
import com.account_as400_pcml_sdk.openlegacy.Dactcs6X;
import org.openlegacy.core.rpc.RpcSession;
import org.openlegacy.core.rpc.actions.RpcActions;

import org.openlegacy.core.annotations.services.*;
import org.openlegacy.core.annotations.OpenlegacyDesigntime;
import org.openlegacy.impl.services.ws.ServiceBinder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.context.ApplicationContext;
import org.openlegacy.utils.ActionUtil;

/**
 *  A service implementation which invokes OpenLegacy API, and returns a service output.
 *  The code below should be customize to perform a working scenario which goes through the relevant screens.
 *  Can be tested by invoking the test DeleteAccountServiceTest.
 *  The interface DeleteAccountService can be customized to enabling passing parameters to the service, and this class can consume the parameters within the relevant screens.
 */
@Service(name = "DeleteAccount")
@OpenlegacyDesigntime(editor = "WebServiceEditor")
@Component
public class DeleteAccountServiceImpl implements DeleteAccountService {

    @Autowired
    private ApplicationContext applicationContext;


    @Autowired
    private ServiceBinder serviceBinder;

    @Override
    @ServiceMethod(name = "getDeleteAccount", entities = {
            @EntityMapping(alias="dactcs6X", entity=com.account_as400_pcml_sdk.openlegacy.Dactcs6X.class)})
    @LogServiceUsage
    @BindInputs(endpoints = {
            @BindTo(endpoint = "dactcs6X.input", expression = "input")})
    @BindOutputs(endpoints = {
            @BindFrom(endpoint = "input", expression = "dactcs6X.input")})
    public DeleteAccountOut getDeleteAccount(DeleteAccountIn deleteAccountIn) throws Exception {
        DeleteAccountOut deleteAccountOut = new DeleteAccountOut();
        /* autogenerated - sessions block start*/
        ;
        RpcSession accountAs400PcmlSdkSession = applicationContext.getBean("accountAs400PcmlSdkSession", RpcSession.class);
        /* autogenerated - sessions block end */
        ;

        try {
            /* autogenerated - execution block start */;
            Dactcs6X dactcs6X = serviceBinder.bindInputs(this, "getDeleteAccount", "dactcs6X", new Dactcs6X(), deleteAccountIn);
            dactcs6X = accountAs400PcmlSdkSession.doAction(ActionUtil.getRpcAction(Dactcs6X.class), dactcs6X);
            /* autogenerated - execution block end */;

            /* autogenerated - output block start */;
            deleteAccountOut = serviceBinder.bindOutput(this, "getDeleteAccount", deleteAccountOut, new String[]{"deleteAccountIn", "dactcs6X"}, deleteAccountIn, dactcs6X);
            /* autogenerated - output block end */;

            return deleteAccountOut;
        } finally {
            /* autogenerated - disconnect block start */
            ;
            accountAs400PcmlSdkSession.disconnect();
            /* autogenerated - disconnect block end */
            ;
        }
    }

}
