package com.account_oracle_api.openlegacy.services;

import org.apache.commons.lang3.StringUtils;
import com.account_oracle_sdk.openlegacy.ResetCustomerBankAccounts;
import org.openlegacy.core.rpc.RpcSession;
import org.openlegacy.core.rpc.actions.RpcActions;
import org.openlegacy.core.annotations.services.*;
import org.openlegacy.core.annotations.OpenlegacyDesigntime;
import org.openlegacy.impl.services.ws.ServiceBinder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.context.ApplicationContext;
import org.openlegacy.utils.ActionUtil;

/**
 *  A service implementation which invokes OpenLegacy API, and returns a service output.
 *  The code below should be customize to perform a working scenario which goes through the relevant screens.
 *  The interface ResetAccountService can be customized to enabling passing parameters to the service, and this class can consume the parameters within the relevant screens.
 */
@Service(name = "ResetAccount")
@OpenlegacyDesigntime(editor = "WebServiceEditor")
@Component
public class ResetAccountServiceImpl implements ResetAccountService {

    @Autowired
    private ApplicationContext applicationContext;

    @Autowired
    private ServiceBinder serviceBinder;

    @Override
    @ServiceMethod(name = "getReetAccount", entities = { @EntityMapping(alias = "resetCustomerBankAccounts", entity = com.account_oracle_sdk.openlegacy.ResetCustomerBankAccounts.class) })
    @LogServiceUsage
    @BindOutputs(endpoints = { @BindFrom(endpoint = "resetCustomerBankAccounts", expression = "resetCustomerBankAccounts") })
    public ReetAccountOut getReetAccount() throws Exception {
        ReetAccountOut reetAccountOut = new ReetAccountOut();
        /* autogenerated - sessions block start*/
        ;
        RpcSession accountOracleSdkSession = applicationContext.getBean("accountOracleSdkSession", RpcSession.class);
        /* autogenerated - sessions block end */
        ;
        try {
            /* autogenerated - execution block start */
            ;
            ResetCustomerBankAccounts resetCustomerBankAccounts = new ResetCustomerBankAccounts();
            resetCustomerBankAccounts = accountOracleSdkSession.doAction(ActionUtil.getRpcAction(ResetCustomerBankAccounts.class), resetCustomerBankAccounts);
            /* autogenerated - execution block end */
            ;
            /* autogenerated - output block start */
            ;
            reetAccountOut = serviceBinder.bindOutput(this, "getReetAccount", reetAccountOut, new String[] { "resetCustomerBankAccounts" }, resetCustomerBankAccounts);
            /* autogenerated - output block end */
            ;
            return reetAccountOut;
        } finally {
            /* autogenerated - disconnect block start */
            ;
            accountOracleSdkSession.disconnect();
            /* autogenerated - disconnect block end */
            ;
        }
    }
}
