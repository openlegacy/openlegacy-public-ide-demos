package com.account_oracle_api.openlegacy.services;

import org.apache.commons.lang3.StringUtils;
import com.account_oracle_sdk.openlegacy.GetAllCustomerBankAccounts;
import org.openlegacy.core.rpc.RpcSession;
import org.openlegacy.core.rpc.actions.RpcActions;

import org.openlegacy.core.annotations.services.*;
import org.openlegacy.core.annotations.OpenlegacyDesigntime;
import org.openlegacy.impl.services.ws.ServiceBinder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.context.ApplicationContext;
import org.openlegacy.utils.ActionUtil;

/**
 *  A service implementation which invokes OpenLegacy API, and returns a service output.
 *  The code below should be customize to perform a working scenario which goes through the relevant screens.
 *  The interface GetAllCustomerAccountListService can be customized to enabling passing parameters to the service, and this class can consume the parameters within the relevant screens.
 */
@Service(name = "GetAllCustomerAccountList")
@OpenlegacyDesigntime(editor = "WebServiceEditor")
@Component
public class GetAllCustomerAccountListServiceImpl implements GetAllCustomerAccountListService {

    @Autowired
    private ApplicationContext applicationContext;


    @Autowired
    private ServiceBinder serviceBinder;

    @Override
    @ServiceMethod(name = "getGetAllCustomerAccountList", entities = {
            @EntityMapping(alias="getAllCustomerBankAccounts", entity=com.account_oracle_sdk.openlegacy.GetAllCustomerBankAccounts.class)})
    @LogServiceUsage
    @BindOutputs(endpoints = {
            @BindFrom(endpoint = "getAllCustomerBankAccounts", expression = "getAllCustomerBankAccounts")})
    public GetAllCustomerAccountListOut getGetAllCustomerAccountList() throws Exception {
        GetAllCustomerAccountListOut getAllCustomerAccountListOut = new GetAllCustomerAccountListOut();
        /* autogenerated - sessions block start*/
        ;
        RpcSession accountOracleSdkSession = applicationContext.getBean("accountOracleSdkSession", RpcSession.class);
        /* autogenerated - sessions block end */
        ;

        try {
            /* autogenerated - execution block start */;
            GetAllCustomerBankAccounts getAllCustomerBankAccounts = new GetAllCustomerBankAccounts();
            getAllCustomerBankAccounts = accountOracleSdkSession.doAction(ActionUtil.getRpcAction(GetAllCustomerBankAccounts.class), getAllCustomerBankAccounts);
            /* autogenerated - execution block end */;

            /* autogenerated - output block start */;
            getAllCustomerAccountListOut = serviceBinder.bindOutput(this, "getGetAllCustomerAccountList", getAllCustomerAccountListOut, new String[]{"getAllCustomerBankAccounts"}, getAllCustomerBankAccounts);
            /* autogenerated - output block end */;

            return getAllCustomerAccountListOut;
        } finally {
            /* autogenerated - disconnect block start */
            ;
            accountOracleSdkSession.disconnect();
            /* autogenerated - disconnect block end */
            ;
        }
    }

}
