package com.account_cics_api.openlegacy.services;

import org.apache.commons.lang3.StringUtils;
import com.account_cics_sdk.openlegacy.Lactcs9;
import com.account_cics_sdk.openlegacy.Lactcs9AccountArray;
import com.account_cics_sdk.openlegacy.Lactcs9ActoDetails;
import com.account_cics_sdk.openlegacy.Lactcs9Lactcs9Input;
import com.account_cics_sdk.openlegacy.Lactcs9Lactcs9Output;
import com.account_cics_sdk.openlegacy.Lactcs9OutPut;
import org.openlegacy.core.rpc.RpcSession;
import org.openlegacy.core.rpc.actions.RpcActions;

import org.openlegacy.core.annotations.services.*;
import org.openlegacy.core.annotations.OpenlegacyDesigntime;
import org.openlegacy.impl.services.ws.ServiceBinder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.context.ApplicationContext;
import org.openlegacy.utils.ActionUtil;

/**
 *  A service implementation which invokes OpenLegacy API, and returns a service output.
 *  The code below should be customize to perform a working scenario which goes through the relevant screens.
 *  Can be tested by invoking the test ListAccountServiceTest.
 *  The interface ListAccountService can be customized to enabling passing parameters to the service, and this class can consume the parameters within the relevant screens.
 */
@Service(name = "ListAccount")
@OpenlegacyDesigntime(editor = "WebServiceEditor")
@Component
public class ListAccountServiceImpl implements ListAccountService {

    @Autowired
    private ApplicationContext applicationContext;


    @Autowired
    private ServiceBinder serviceBinder;

    @Override
    @ServiceMethod(name = "getListAccount", entities = {
            @EntityMapping(alias="lactcs9", entity=com.account_cics_sdk.openlegacy.Lactcs9.class)})
    @LogServiceUsage
    @BindOutputs(endpoints = {
            @BindFrom(endpoint = "lactcs9Output", expression = "lactcs9.lactcs9Output")})
    public ListAccountOut getListAccount() throws Exception {
        ListAccountOut listAccountOut = new ListAccountOut();
        /* autogenerated - sessions block start*/
        ;
        RpcSession accountCicsSdkSession = applicationContext.getBean("accountCicsSdkSession", RpcSession.class);
        /* autogenerated - sessions block end */
        ;

        try {
            /* autogenerated - execution block start */;
            Lactcs9 lactcs9 = new Lactcs9();
            lactcs9 = accountCicsSdkSession.doAction(ActionUtil.getRpcAction(Lactcs9.class), lactcs9);
            /* autogenerated - execution block end */;

            /* autogenerated - output block start */;
            listAccountOut = serviceBinder.bindOutput(this, "getListAccount", listAccountOut, new String[]{"lactcs9"}, lactcs9);
            /* autogenerated - output block end */;

            return listAccountOut;
        } finally {
            /* autogenerated - disconnect block start */
            ;
            accountCicsSdkSession.disconnect();
            /* autogenerated - disconnect block end */
            ;
        }
    }

}
