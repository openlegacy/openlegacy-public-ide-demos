package com.policy_db2_api.openlegacy.services;

import org.apache.commons.lang3.StringUtils;
import com.policy_db2_sdk.openlegacy.Lpolsql;
import com.policy_db2_sdk.openlegacy.Lpolsql.ResultSet;
import org.openlegacy.core.rpc.RpcSession;
import org.openlegacy.core.rpc.actions.RpcActions;

import org.openlegacy.core.annotations.services.*;
import org.openlegacy.core.annotations.OpenlegacyDesigntime;
import org.openlegacy.impl.services.ws.ServiceBinder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.context.ApplicationContext;
import org.openlegacy.utils.ActionUtil;

/**
 *  A service implementation which invokes OpenLegacy API, and returns a service output.
 *  The code below should be customize to perform a working scenario which goes through the relevant screens.
 *  Can be tested by invoking the test ListPolicyServiceTest.
 *  The interface ListPolicyService can be customized to enabling passing parameters to the service, and this class can consume the parameters within the relevant screens.
 */
@Service(name = "ListPolicy")
@OpenlegacyDesigntime(editor = "WebServiceEditor")
@Component
public class ListPolicyServiceImpl implements ListPolicyService {

    @Autowired
    private ApplicationContext applicationContext;


    @Autowired
    private ServiceBinder serviceBinder;

    @Override
    @ServiceMethod(name = "getListPolicy", entities = {
            @EntityMapping(alias="lpolsql", entity=com.policy_db2_sdk.openlegacy.Lpolsql.class)})
    @LogServiceUsage
    @BindOutputs(endpoints = {
            @BindFrom(endpoint = "resultSet", expression = "lpolsql.resultSet")})
    public ListPolicyOut getListPolicy() throws Exception {
        ListPolicyOut listPolicyOut = new ListPolicyOut();
        /* autogenerated - sessions block start*/
        ;
        RpcSession policyDb2SdkSession = applicationContext.getBean("policyDb2SdkSession", RpcSession.class);
        /* autogenerated - sessions block end */
        ;

        try {
            /* autogenerated - execution block start */;
            Lpolsql lpolsql = new Lpolsql();
            lpolsql = policyDb2SdkSession.doAction(ActionUtil.getRpcAction(Lpolsql.class), lpolsql);
            /* autogenerated - execution block end */;

            /* autogenerated - output block start */;
            listPolicyOut = serviceBinder.bindOutput(this, "getListPolicy", listPolicyOut, new String[]{"lpolsql"}, lpolsql);
            /* autogenerated - output block end */;

            return listPolicyOut;
        } finally {
            /* autogenerated - disconnect block start */
            ;
            policyDb2SdkSession.disconnect();
            /* autogenerated - disconnect block end */
            ;
        }
    }

}
