package com.microsoft_sqlserver_sp_api.openlegacy.services;

import org.apache.commons.lang3.StringUtils;
import com.microsoft_sqlserver_sp_sdk.openlegacy.ProcGetAllExpiredCreditcards;
import com.microsoft_sqlserver_sp_sdk.openlegacy.ProcGetAllExpiredCreditcards.ResultSet;
import org.openlegacy.core.rpc.RpcSession;
import org.openlegacy.core.rpc.actions.RpcActions;

import org.openlegacy.core.annotations.services.*;
import org.openlegacy.core.annotations.OpenlegacyDesigntime;
import org.openlegacy.impl.services.ws.ServiceBinder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.context.ApplicationContext;
import org.openlegacy.utils.ActionUtil;

/**
 *  A service implementation which invokes OpenLegacy API, and returns a service output.
 *  The code below should be customize to perform a working scenario which goes through the relevant screens.
 *  Can be tested by invoking the test ExpiredCardsServiceTest.
 *  The interface ExpiredCardsService can be customized to enabling passing parameters to the service, and this class can consume the parameters within the relevant screens.
 */
@Service(name = "ExpiredCards")
@OpenlegacyDesigntime(editor = "WebServiceEditor")
@Component
public class ExpiredCardsServiceImpl implements ExpiredCardsService {

    @Autowired
    private ApplicationContext applicationContext;


    @Autowired
    private ServiceBinder serviceBinder;

    @Override
    @ServiceMethod(name = "getExpiredCards", entities = {
            @EntityMapping(alias="procGetAllExpiredCreditcards", entity=com.microsoft_sqlserver_sp_sdk.openlegacy.ProcGetAllExpiredCreditcards.class)})
    @LogServiceUsage
    @BindOutputs(endpoints = {
            @BindFrom(endpoint = "resultSet", expression = "procGetAllExpiredCreditcards.resultSet")})
    public ExpiredCardsOut getExpiredCards() throws Exception {
        ExpiredCardsOut expiredCardsOut = new ExpiredCardsOut();
        /* autogenerated - sessions block start*/
        ;
        RpcSession microsoftSqlserverSpSdkSession = applicationContext.getBean("microsoftSqlserverSpSdkSession", RpcSession.class);
        /* autogenerated - sessions block end */
        ;

        try {
            /* autogenerated - execution block start */;
            ProcGetAllExpiredCreditcards procGetAllExpiredCreditcards = new ProcGetAllExpiredCreditcards();
            procGetAllExpiredCreditcards = microsoftSqlserverSpSdkSession.doAction(ActionUtil.getRpcAction(ProcGetAllExpiredCreditcards.class), procGetAllExpiredCreditcards);
            /* autogenerated - execution block end */;

            /* autogenerated - output block start */;
            expiredCardsOut = serviceBinder.bindOutput(this, "getExpiredCards", expiredCardsOut, new String[]{"procGetAllExpiredCreditcards"}, procGetAllExpiredCreditcards);
            /* autogenerated - output block end */;

            return expiredCardsOut;
        } finally {
            /* autogenerated - disconnect block start */
            ;
            microsoftSqlserverSpSdkSession.disconnect();
            /* autogenerated - disconnect block end */
            ;
        }
    }

}
