package com.account_ims_api.openlegacy.services;

import org.apache.commons.lang3.StringUtils;
import com.account_ims_sdk.openlegacy.Ractim8;
import com.account_ims_sdk.openlegacy.Ractim8AccountArray;
import com.account_ims_sdk.openlegacy.Ractim8ActiDetails;
import com.account_ims_sdk.openlegacy.Ractim8Ractim8Input;
import com.account_ims_sdk.openlegacy.Ractim8Ractim8Output;
import org.openlegacy.core.rpc.RpcSession;
import org.openlegacy.core.rpc.actions.RpcActions;

import org.openlegacy.core.annotations.services.*;
import org.openlegacy.core.annotations.OpenlegacyDesigntime;
import org.openlegacy.impl.services.ws.ServiceBinder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.context.ApplicationContext;
import org.openlegacy.utils.ActionUtil;

/**
 *  A service implementation which invokes OpenLegacy API, and returns a service output.
 *  The code below should be customize to perform a working scenario which goes through the relevant screens.
 *  The interface ResetAccountsService can be customized to enabling passing parameters to the service, and this class can consume the parameters within the relevant screens.
 */
@Service(name = "ResetAccounts")
@OpenlegacyDesigntime(editor = "WebServiceEditor")
@Component
public class ResetAccountsServiceImpl implements ResetAccountsService {

    @Autowired
    private ApplicationContext applicationContext;


    @Autowired
    private ServiceBinder serviceBinder;

    @Override
    @ServiceMethod(name = "getResetAccounts", entities = {
            @EntityMapping(alias="ractim8", entity=com.account_ims_sdk.openlegacy.Ractim8.class)})
    @LogServiceUsage
    @BindInputs(endpoints = {
            @BindTo(endpoint = "ractim8.ractim8Input", expression = "ractim8Input")})
    @BindOutputs(endpoints = {
            @BindFrom(endpoint = "ractim8Output", expression = "ractim8.ractim8Output")})
    public ResetAccountsOut getResetAccounts(ResetAccountsIn resetAccountsIn) throws Exception {
        ResetAccountsOut resetAccountsOut = new ResetAccountsOut();
        /* autogenerated - sessions block start*/
        ;
        RpcSession accountImsSdkSession = applicationContext.getBean("accountImsSdkSession", RpcSession.class);
        /* autogenerated - sessions block end */
        ;

        try {
            /* autogenerated - execution block start */;
            Ractim8 ractim8 = serviceBinder.bindInputs(this, "getResetAccounts", "ractim8", new Ractim8(), resetAccountsIn);
            ractim8 = accountImsSdkSession.doAction(ActionUtil.getRpcAction(Ractim8.class), ractim8);
            /* autogenerated - execution block end */;

            /* autogenerated - output block start */;
            resetAccountsOut = serviceBinder.bindOutput(this, "getResetAccounts", resetAccountsOut, new String[]{"resetAccountsIn", "ractim8"}, resetAccountsIn, ractim8);
            /* autogenerated - output block end */;

            return resetAccountsOut;
        } finally {
            /* autogenerated - disconnect block start */
            ;
            accountImsSdkSession.disconnect();
            /* autogenerated - disconnect block end */
            ;
        }
    }

}
